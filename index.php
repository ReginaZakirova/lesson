<?php

//Слайд 13
echo "<br>
1. Создать функцию, которая сравнивает два числа и возвращает наибольшее.
1. Объявить функции
2. В функции объявить 2 переменные, присвоить им значения
3. Задать конструкцию if
4. Не забыть про return <br> ";

function slide13_1(){
    $a = 44;
    $b = 33;

    if($a>$b){
        return $a;
    }
    else {
        return $b;
    }
}
$result = slide13_1();
echo  'Большее число ' . $result;


echo "<br> <br>
2. Создать функцию, которая принимает длину двух катетов и возвращает значение гипотенузы прямоугольного треугольника.
1. Объявить функции
2. Во входных параметрах должны быть 2 переменные - катеты
3. Вспомнить теорему Пифагора
4. По теореме Пифагора вычислить гипотенузу и вернуть ее
<br>";
function slide13_2($a = 3, $b = 4){
    $c = sqrt($a*$a + $b*$b);
    return $c;
}
$c = slide13_2();
echo 'Гипотезнуза ' . $c;

echo "<br> <br>
3. Создать функцию, которая принимает одно число (10). В функции создать цикл, который будет увеличивать число в 10 раз и выводить его на экран.
Когда число будет больше 1 000 000, на экране должно появляться сообщение, что вы достигли предела.
1. Объявить функции
2. Во входных параметрах должна быть 1 переменная
3. Запустить цикл (например, while)
4. В цикле сделать проверку на значение числа (не больше 1 000 000)
5. Как только превысили 1 000 000, написать на экране сообщение
<br>";
slide13_3 ();
function slide13_3 ($r = 10){
    while ($r <1000000){
        $r=$r*10;
        echo $r . ' ';
    }
    echo 'Достигли предела';
}


// Слайд 14
echo "<br> <br>
4. Создать функцию, в которой объявляется массив и случайными элементами.
1. Объявить функции
2. В функции объявить и проинициализировать массив случайными числами (размерность не важна)
<br>";

function slide14_4(){
    $n = 100;
    $arr = []; // задаем массив, но не заполняем его
        for ($i = 0; $i < $n; $i++){
            $arr[$i]= mt_rand(0,100);
            echo "$arr[$i]" . ' ';
        }
}
slide14_4();

echo "<br> <br>
5. Создать функцию, которая принимает массив и возвращает среднеарифметическое значение массива.
1. Объявить и проинициализировать массив случайными числами (размерность не важна)
2. Объявить функции
3. Входной параметр функции - массив из п.1
4. В функции запустить цикл, посчитать сумму всех элементов массива и количество элементов массива (не пользуемся встроенными функциями, пишем свою)
5. Посчитать среднеарифметическое значение массива и вернуть его
<br>";

    $n = 100;
    $arr5 = []; // задаем массив, но не заполняем его
        for ($i = 0; $i < $n; $i++){
            $arr5[$i]= mt_rand(0,100);
            echo "$arr5[$i]" . ' ';
        }
function arraySum($arr5){
    echo "<br> Сумма массива = " . array_sum($arr5) . "\n";
    $newArray = array();
    foreach ($array as $values) {
        if (!array_key_exists(strtolower($values), $newArray)) {
            $newArray[strtolower($values)] = 0;
        }
        $newArray[strtolower($values)] += 1;
    }
    return $newArray;
    echo "<br> Количество элементов массива = " . array_count_values($arr5). "\n";
    }
arraySum($arr5);



/*
6.Создать функцию, которая принимает строку. Вернуть количество слов в строке.
7.*Написать функцию, которая рассчитывает последовательность чисел Фибоначчи.
*/

/*
Слайд 15
1. Создайте функцию, которая принимает одномерный массив и возвращает массив, заполненный случайными числами.
2. Дана строка «HTML, CSS, PHP, BITRIX». Написать функцию, которая определит количество слов строке.
3. Дана строка «HTML, CSS, PHP, BITRIX». Написать функцию, которая выведет в обратном порядке буквы («XIRTIB ,PHP … »).
4.Дана строка «HTML, CSS, PHP, BITRIX». Написать функцию, которая выводит на экран длину строки.
5. Дана строка «HTML, CSS, PHP, BITRIX». Написать функцию, которая выводит каждую букву на новую строку
*/

?>