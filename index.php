<?php

//  Задание 12 - 4, 5

/*  По сути задание сводится к тому, что нам необходимо сформировать два множества, элементами которых являются
    отдельные предложения. А потом над этими двумя исходными множествами произвести операции логического объединения
    и пересечения.
    Первая задача, которую необходимо решить - это формирование самого исходного множества предложений из файла.
    Так как файлов два, будем разумно решить данную задачу посредством функции, которая принимает файл, а возвращает
    массив предложений строкового типа. */

function file_to_sentence($file_name) {
    $file = file_get_contents($file_name);    // Считать содержимое первого файла как строку в $file.
    /*  Для формирования отдельных монолитных строк предложений необходимо ликвидировать символы новой
    строки "\n\r" - и для этого я решил воспользоваться функцией str_replace(). Будем ее использовать в два этапа:
    1. Замена сочетания "\r\n" на символ одиночного пробела.
    2. Замена двух последовательных пробелов одиночным пробелом.
    Такие действия позволят корректно склеить предложение, в случае, если оно было расположено в исходном файле
    посредством переноса с одной строки на другую. */
    $file = str_replace("\r\n", " ", $file);
    $file = str_replace("  ", " ", $file);
    /*  На данном этапе содержимое файла представлено в соответствующей переменной строкового типа. Теперь
    нам необходимо разбить эту единую строку на отдельные предложения с учетом условия, обговоренного в конце занятия,
    что предложение у нас заканчивается одним из следующих символов: . ! ?
    Не могу придумать ничего более лучшего, чем разбить исходную строку на массив символов и собирать искомые строки
    посимвольно. */
    $array_file = mb_str_split($file);  // Преобразуем строку в массив символов.
    $sentence_array = [];               // Здесь будем хранить массив отдельных предложений.
    $len = count($array_file);          // Длина исходного масива символов
    $sentence = null;                   // Новое отдельное предложение
    for ($i = 0; $i <= $len; $i++) {
        $sentence = $sentence . $array_file[$i];    // Генерируем предложение конкатенацией посимвольно.
        if (($array_file[$i] == ".") or ($array_file[$i] == "!") or ($array_file[$i] == "?")) {
            // Если достигли конца предложения, помещаем его в массив.
            $sentence_array[] = $sentence;
            $i++;                                   // Игнорируем пробел перед следующим предложением.
            $sentence = null;                       // Сбрасываем текущее предложение.
        }
    }
    return $sentence_array;
}

echo "Задание 12 - 4<br><br>";
echo "Содержимое первого файла как массив предложений: <br>";
echo "<pre>";
$arr1 = file_to_sentence('file1.txt'); // Получаем массив предложений из первого файла.
print_r($arr1);
echo "</pre>";
echo "Содержимое второго файла как массив предложений: <br>";
echo "<pre>";
$arr2 = file_to_sentence('file2.txt'); // Получаем массив предложений из первого файла.
print_r($arr2);
echo "</pre><br>";

/*  Я что-то задумался поначалу над алгоритмикой и придумал два различных решения с циклами! Но черт возьми, на
    часах 02:15 ночи, и я подумал: "Витя, какого хрена, а может есть уже готовые функции для работы с массивами
    и я могу не изобретать велосипед?! Завтра еще с сессиями разбираться! Надо же - оказывается есть! :-) */
$arr_diff = array_merge($arr1, $arr2);          // Склеим два массива!
$arr_diff = array_unique($arr_diff);            // Исключим повторные элементы!
$fp = fopen('file3.txt', 'w+');
foreach ($arr_diff as $item) {
    fwrite($fp, ($item . "\r\n"));              // Запишем третий файл
}
fclose($fp);
$arr_common = array_intersect($arr1, $arr2);    // Массив с общими строками!
$fp = fopen('file4.txt', 'w+');
foreach ($arr_common as $item) {
    fwrite($fp, ($item . "\r\n"));              // Запишем третий файл
}
fclose($fp);

echo "Содержимое третьего файла как массив предложений: <br>";
echo "<pre>";
print_r($arr_diff);
echo "</pre><br>";
echo "Содержимое четвертого файла как массив предложений: <br>";
echo "<pre>";
print_r($arr_common);
echo "</pre><br>";

