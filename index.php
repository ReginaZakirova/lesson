<?php
/*
Слайд 13
1. Создать функцию, которая сравнивает два числа и возвращает наибольшее.
1. Объявить функции
2. В функции объявить 2 переменные, присвоить им значения
3. Задать конструкцию if
4. Не забыть про return
*/
echo "1. Создать функцию, которая сравнивает два числа и возвращает наибольшее." . '<br>';
function minmax() {
    $a = 3;
    $b = 5;
    if($a > $b) {
        return $a;
    }
    else {
        return $b;
    }
}
$max = minmax();
echo "максимальное число $max" . '<br>';

/*
2. Создать функцию, которая принимает длину двух катетов и возвращает значение гипотенузы прямоугольного треугольника.
1. Объявить функции
2. Во входных параметрах должны быть 2 переменные - катеты
3. Вспомнить теорему Пифагора
4. По теореме Пифагора вычислить гипотенузу и вернуть ее
*/
echo '<br>' . "2. Создать функцию, которая принимает длину двух катетов и возвращает значение гипотенузы прямоугольного треугольника." . '<br>';
function math($c1, $c2){
    $result = sqrt(($c1)**2 + ($c2)**2);
    return $result;
}
$cat1 = 2;
$cat2 = 2;
math($cat1, $cat2);
$hypotenuse = math($cat1, $cat2);
echo "гипотенуза равна $hypotenuse" . '<br>';

/*
3. Создать функцию, которая принимает одно число (10). В функции создать цикл, который будет увеличивать число в 10 раз и выводить его на экран.
Когда число будет больше 1 000 000, на экране должно появляться сообщение, что вы достигли предела.
1. Объявить функции
2. Во входных параметрах должна быть 1 переменная
3. Запустить цикл (например, while)
4. В цикле сделать проверку на значение числа (не больше 1 000 000)
5. Как только превысили 1 000 000, написать на экране сообщение
*/
echo '<br>' . "3. Создать функцию, которая принимает одно число (10). В функции создать цикл, который будет увеличивать число в 10 раз и выводить его на экран.
Когда число будет больше 1 000 000, на экране должно появляться сообщение, что вы достигли предела." . '<br>';
function million($x) {
    while ($x < 1000000) {
        $x = $x*10;
        echo $x . '<br>';
    }
    echo "вы достигли предела" . '<br>';
}
$number = 10;
million($number);

/*
Слайд 14
4. Создать функцию, в которой объявляется массив и случайными элементами.
1. Объявить функции
2. В функции объявить и проинициализировать массив случайными числами (размерность не важна)
*/
echo '<br>' . "4. Создать функцию, в которой объявляется массив и случайными элементами." . '<br>';
function arr() {
    $array = [];
    for ($i = 0; $i < 10; $i++) {
        $array[$i] = mt_rand(0, 9);
    }
    return $array;
    
}  
echo '<pre>';
print_r(arr());
echo '</pre>';

/*
5. Создать функцию, которая принимает массив и возвращает среднеарифметическое значение массива.
1. Объявить и проинициализировать массив случайными числами (размерность не важна)
2. Объявить функции
3. Входной параметр функции - массив из п.1
4. В функции запустить цикл, посчитать сумму всех элементов массива и количество элементов массива (не пользуемся встроенными функциями, пишем свою)
5. Посчитать среднеарифметическое значение массива и вернуть его
*/
echo '<br>' . "5. Создать функцию, которая принимает массив и возвращает среднеарифметическое значение массива." . '<br>';
$array5 = [];
    for ($i = 0; $i < 5; $i++) {
        $array5[$i] = mt_rand(0, 9);
    }
echo '<pre>';
print_r($array5);
echo '</pre>';

function array5($val){
    $count = 0;
    $sum = 0;
    foreach ($val as $value) {
        $count++;
        $sum += $value;
    }
    $res = $sum/$count;
    return $res;
}
$answer = array5($array5);
echo "Среднеарифметическое значение массива равно $answer" . '<br>';

// 6.Создать функцию, которая принимает строку. Вернуть количество слов в строке.
echo '<br>' . "6.Создать функцию, которая принимает строку. Вернуть количество слов в строке." . '<br>';
function stringCount($str) {
    $arr6 = explode(" ", $str);
    $numberWords = 0;
    foreach($arr6 as $word) {
        $numberWords++;
    }
    return $numberWords;
}
$string = "Создать функцию, которая принимает строку";
$result6 = stringCount($string);
echo "Количество слов в строке $result6" . '<br>';

// 7.Написать функцию, которая рассчитывает последовательность чисел Фибоначчи.
echo '<br>' . "7.Написать функцию, которая рассчитывает последовательность чисел Фибоначчи." . '<br>';
function fibonachi($n){
    if($n == 0) {
        return 0;
    }
    if($n == 1 || $n == 2) {
        return 1;
    } else {
        return fibonachi($n - 1) + fibonachi($n - 2);
    }
}

for ($n = 0; $n <= 20; $n++) {
    echo fibonachi($n) . ", ";
}

/*
Слайд 15
1. Создайте функцию, которая принимает одномерный массив и возвращает массив, заполненный случайными числами.
2. Дана строка «HTML, CSS, PHP, BITRIX». Написать функцию, которая определит количество слов строке.
3. Дана строка «HTML, CSS, PHP, BITRIX». Написать функцию, которая выведет в обратном порядке буквы («XIRTIB ,PHP … »).
4.Дана строка «HTML, CSS, PHP, BITRIX». Написать функцию, которая выводит на экран длину строки.
5. Дана строка «HTML, CSS, PHP, BITRIX». Написать функцию, которая выводит каждую букву на новую строку
*/
